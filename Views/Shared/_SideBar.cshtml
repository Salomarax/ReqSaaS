@{
    var action = (string?)ViewContext.RouteData.Values["action"];
    var controller = (string?)ViewContext.RouteData.Values["controller"];
    Func<string, string, string> active = (a, c) =>
        string.Equals(controller, c, System.StringComparison.OrdinalIgnoreCase)
        && string.Equals(action, a, System.StringComparison.OrdinalIgnoreCase) ? "active" : "";
    var canCrud = User.HasClaim("nivel", "2") || User.HasClaim("nivel", "3");
}
<aside class="sidebar">
    <div class="brand">ReqSaaS <small>Plataforma de Requisitos</small></div>
    <nav class="nav">
        <a class="@active("ReqView", "Home")" asp-controller="Home" asp-action="ReqView">📊 Resumen</a>
        @if (canCrud)
        {
            <a class="@active("AddReq", "Home")" asp-controller="Home" asp-action="AddReq">➕ Agregar requisito</a>
        }
    </nav>
    <hr />

    @if (User?.Identity?.IsAuthenticated == true)
    {
        <div class="logout">
            <form asp-controller="Home" asp-action="Logout" method="post" class="inline">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn-link">📕 Cerrar sesión</button>
            </form>
        </div>
    }
</aside>
